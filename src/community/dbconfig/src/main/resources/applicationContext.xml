<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <!--
     spring/hibernate config
     -->

   <bean id="hibConfigDataSource" class="org.geoserver.data.GeoServerDataSource">
        <property name="dataDirectory" ref="dataDirectory"/>
        <property name="file" value="geoserver.db.properties"/>
        <property name="defaultParameters">
          <props>
            <prop key="driver">org.h2.Driver</prop>
            <prop key="url">jdbc:h2:file:%GEOSERVER_DATA_DIR%/geoserver</prop>
            <prop key="username"></prop>
            <prop key="password"></prop>
          </props>
        </property>
    </bean>

   <bean id="hibSessionFactoryConfigurer" class="org.geoserver.config.GeoServerPropertyConfigurer">
      <constructor-arg ref="dataDirectory"/>
      <property name="location" value="file:hibernate.properties"/>
      <property name="properties">
        <props>
          <!--prop key="database">H2</prop>
          <prop key="databasePlatform">org.geoserver.hibernate.H2Dialect</prop>
          <prop key="showSql">false</prop>
          <prop key="generateDdl">true</prop-->

          <prop key="hibernate.dialect">org.geoserver.hibernate.H2Dialect</prop>
          <prop key="hibernate.hbm2ddl.auto">update</prop>
          <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
          <prop key="hibernate.cache.provider_configuration_file_resource_path">/ehcache.xml</prop>
          <prop key="hibernate.cache.use_query_cache">true</prop>
          <prop key="hibernate.cache.use_second_level_cache">true</prop>
          <prop key="hibernate.generate_statistics">true</prop>
          <prop key="hibernate.session_factory_name">SessionFactory</prop>
          <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
          <prop key="hibernate.show_sql">false</prop>
          <prop key="hibernate.use_sql_comments">true</prop>
          <prop key="hibernate.format_sql">true</prop>
        </props>
      </property>
      <property name="comments">
         <value>Hibernate properties for the geoserver catalog and configuration. You probably 
don't  want to change these values unless instructed by a developer.</value>
      </property>
    </bean>
    
    <bean id="hibPostLoadEventListener" class="org.geoserver.catalog.hib.HibPostLoadEventListener"/>
    
    <bean id="hibSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
     <property name="dataSource" ref="hibConfigDataSource"/>
        <property name="mappingResources">
          <list>
            <value>mappings.hbm.xml</value>
          </list>
        </property>
        <property name="hibernateProperties">
          <props>
             <prop key="hibernate.dialect">${hibernate.dialect}</prop>
             <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
             <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>

             <!-- 
             <prop key="hibernate.cache.provider_class">${hibernate.cache.provider_class}</prop>
             <prop key="hibernate.cache.provider_configuration_file_resource_path">${hibernate.cache.provider_configuration_file_resource_path}</prop>
             <prop key="hibernate.cache.use_query_cache">${hibernate.cache.use_query_cache}</prop>
             <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
             -->

             <prop key="hibernate.session_factory_name">${hibernate.session_factory_name}</prop>
             <prop key="hibernate.bytecode.use_reflection_optimizer">${hibernate.bytecode.use_reflection_optimizer}</prop>
             <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
             <prop key="hibernate.use_sql_comments">${hibernate.use_sql_comments}</prop>
          </props>
        </property>
        <property name="entityInterceptor">
           <!-- can't inject catalog/config directly because it causes a cycle -->
           <bean class="org.geoserver.hibernate.HibPropertyChangeInterceptor"/>
        </property>
        <property name="eventListeners">
           <map>
             <entry>
                <key><value>post-load</value></key>
                <ref bean="hibPostLoadEventListener"/>
             </entry>
           </map>
        </property>
    </bean>

    <bean id="hibTxManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
       <property name="sessionFactory" ref="hibSessionFactory"/>
    </bean>
    
   <bean id="hibBaseTransactionProxy" abstract="true" 
        class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
       <property name="transactionManager" ref="hibTxManager"/>
       <property name="transactionAttributes">
         <props>
           <prop key="add">PROPAGATION_REQUIRED</prop>
           <prop key="save">PROPAGATION_REQUIRED</prop>
           <prop key="remove">PROPAGATION_REQUIRED</prop>
           <prop key="set*">PROPAGATION_REQUIRED</prop>
           <prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
         </props>
       </property>
   </bean>

   <bean id="hibCatalogFacadeTarget" class="org.geoserver.catalog.hib.HibCatalogFacade">
      <property name="sessionFactory" ref="hibSessionFactory"/>
   </bean>
   
   <bean id="hibGeoServerFacadeTarget" class="org.geoserver.config.hib.HibGeoServerFacade">
      <property name="sessionFactory" ref="hibSessionFactory"/>
   </bean>
   
   <bean id="hibCatalogFacade" parent="hibBaseTransactionProxy">
      <property name="target" ref="hibCatalogFacadeTarget"/>
      <property name="proxyInterfaces">
        <list>
           <value>org.geoserver.catalog.CatalogFacade</value>
        </list>
      </property>
   </bean>
   
   <bean id="hibGeoServerFacade" parent="hibBaseTransactionProxy">
       <property name="target" ref="hibGeoServerFacadeTarget"/>
       <property name="proxyInterfaces">
         <list>
           <value>org.geoserver.config.GeoServerFacade</value>
         </list>
       </property>
   </bean>

    <bean id="hibGeoServerLoader" class="org.geoserver.hibernate.HibGeoServerLoader">
       <constructor-arg ref="resourceLoader"/>
       <property name="catalogFacade" ref="hibCatalogFacade"/>
       <property name="geoServerFacade" ref="hibGeoServerFacade"/>
    </bean>
    
    <bean id="hibSessionFilter" class="org.geoserver.hibernate.OpenSessionInViewFilter">
      <property name="sessionFactoryBeanName" value="hibSessionFactory"/>
    </bean>
    

</beans>